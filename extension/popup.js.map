{"version":3,"sources":["src/utils.ts","src/fetcher.ts","src/renderer.ts","src/app.ts","popup.js"],"names":[],"mappings":"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","file":"popup.js","sourceRoot":"..","sourcesContent":["// Helpers\n\nexport function chunk<T>(inputArray: T[], perChunk: number):T[][] {\n    return inputArray.reduce(\n      (resultArray: T[][], item, index) => {\n        const chunkIndex = Math.floor(index / perChunk)\n  \n        if (!resultArray[chunkIndex]) {\n          resultArray[chunkIndex] = [] // start a new chunk\n        }\n  \n        resultArray[chunkIndex].push(item)\n  \n        return resultArray\n      },\n      []\n    )\n}\n  \nexport function getRandomInt(min: number, max: number) {\n    min = Math.ceil(min)\n    max = Math.floor(max)\n    return Math.floor(Math.random() * (max - min)) + min //The maximum is exclusive and the minimum is inclusive\n  }\n  \nexport function getCurrentTabUrl() {\n    return new Promise<string>((res) => {\n      chrome.tabs.getSelected((tab: any) => {  \n        res(tab.url)\n      });\n    })\n  }","import {Image} from \"./types\";\nimport {getRandomInt} from \"./utils\";\n\nexport interface ImageFetcher {\n    getRandom(): Promise<Image[]>\n}\n\nexport class ImageFetcherOnLgtmFun implements ImageFetcher { \n    getRandom(): Promise<Image[]> {\n        const url = \"https://lgtm.fun\"\n        const endpoint = {\n        random: (number: number) => {\n            if (number > 0 && number < 10) {\n            return `${url}/random${number}.json`\n            }\n            throw new Error(`invalid random number must be 0 > number 10, ${number}`)\n        },\n        latest: `${url}/latest.json`\n        }\n        const randomNumber = getRandomInt(1, 9)\n        return fetch(endpoint.random(randomNumber))\n          .then(response => response.json())\n    }\n}\n\nexport class ImageFetcherOnLgtmoon implements ImageFetcher {\n    getRandom(): Promise<Image[]> {\n        interface Image {\n            url: string;\n            isConverted: boolean;\n        }\n        interface RootObject {\n            images: Image[];\n        }\n        const url = \"https://lgtmoon.herokuapp.com/api/images/random\"\n        return fetch(url)\n        .then(response => response.json())\n        .then((json: RootObject) => json.images.map(image => ({imageurl: image.url})))\n    }\n\n}","\nimport {Image} from \"./types\";\nimport {chunk} from \"./utils\";\n\nexport interface ImageRenderer {\n    render(images: Image[]): void\n}\n\nexport class ImageRendererOnDom implements ImageRenderer {\n    private rootElement: Element;\n    constructor() {\n        this.rootElement = document.querySelector(\"#content\")!\n    }\n  \n    render(images: Image[]) {\n        function renderImage(image: Image): string {\n        return (\n            `<li class=\"image-li\">\n            <img class=\"lgtm-img\" src=\"${image.imageurl}\" />\n            </li>`)\n        }\n        function renderImages(images: Image[]): string {\n        return `\n        <ul class=\"images-ul\">\n            ${images.map(renderImage).reduce((result, li) => result + li, \"\")}\n        </ul>\n        `\n        }\n        const html = chunk(images, 5)\n        .map(renderImages)\n        .map(imageHtml => `<div class=\"images-ul-wrapper\">${imageHtml}</div>`)\n        .reduce((result, li) => result + li, \"\")\n        this.rootElement.innerHTML = html\n  }\n}\n","\nimport {getCurrentTabUrl} from \"./utils\";\nimport {ImageFetcher, ImageFetcherOnLgtmFun, ImageFetcherOnLgtmoon} from \"./fetcher\";\nimport {ImageRenderer, ImageRendererOnDom} from \"./renderer\"\n\n\n\nfunction imageUrlCopyToClipboard(imageUrl: string) {\n    function imageURLToMarkdownFormat(url: string) {\n        return `![img](${url} \"img\")`\n      }\n    getCurrentTabUrl().then(url => {\n    return url.includes(\"https://github.com\") ? imageURLToMarkdownFormat(imageUrl) : imageUrl\n  })\n  .then(text => navigator.clipboard.writeText(text))\n  .then(() => {\n    console.log('copied to clipboard');\n  }, (e) => {\n    console.log('failed to copy', e);\n  });\n}\n\nclass App {\n    constructor(\n        private imageFetcher: ImageFetcher,\n        private imageRenderer: ImageRenderer,\n    ) {}\n\n\n    loadAndShowImages() {\n        this.imageFetcher.getRandom().then(images => {\n            this.imageRenderer.render(images);\n        })\n    }\n}\n\nexport function start() {\n    const app = new App(\n        new ImageFetcherOnLgtmoon(),\n        new ImageRendererOnDom(),\n    );\n\n    document.querySelector(\".more-load-button\")?.addEventListener('click', () => app.loadAndShowImages());\n    document.addEventListener(\"click\", (event) => {\n      if(event?.target instanceof Element && event?.target.getAttribute('class') === \"lgtm-img\") {\n          const imageUrl = event.target.getAttribute('src')\n          if (imageUrl) {\n              imageUrlCopyToClipboard(imageUrl)\n        }\n      }\n    })\n    app.loadAndShowImages();\n}","import {start} from \"./src/app\"\n\nstart();"]}